apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  resources:
    requests:
      storage: 200Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:17
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5432
        env:
          # # direct definition #
          # - name: POSTGRES_USER
          #   value: movie
          
          # # charger les valeurs individuellement depuis 1 configmap ou 1 secret
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: db-env
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: db-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: db-env
                key: POSTGRES_DB
        # # charger tout un fichier d'environnement, wrapp√© dans un configmap 
        # envFrom:
        #   - configMapRef:
        #       name: db-env2
        volumeMounts:
          - mountPath: /var/lib/postgresql/data/
            name: movie-storage
          - mountPath: /docker-entrypoint-initdb.d
            name: movie-init-sql
      volumes:
        - name: movie-storage
          persistentVolumeClaim:
            claimName: db-pvc
        - name: movie-init-sql
          configMap: 
            name: db-init-sql
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    app: db
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

# TODO2: deployment + service nodeport pgadmin4 (!!autre fichier!!, app=dbadmin)
